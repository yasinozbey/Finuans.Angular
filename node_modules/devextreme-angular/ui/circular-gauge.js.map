{"version":3,"file":"circular-gauge.js","sourceRoot":"","sources":["circular-gauge.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 18.1.4\n * Build date: Thu Jun 21 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxCircularGauge from 'devextreme/viz/circular_gauge';\r\n\r\n\r\nimport { DxComponent } from '../core/component';\r\nimport { DxTemplateHost } from '../core/template-host';\r\nimport { DxIntegrationModule } from '../core/integration';\r\nimport { DxTemplateModule } from '../core/template';\r\nimport { NestedOptionHost } from '../core/nested-option';\r\nimport { WatcherHelper } from '../core/watcher-helper';\r\nimport { IterableDifferHelper } from '../core/iterable-differ-helper';\r\n\r\nimport { DxoAnimationModule } from './nested/animation';\r\nimport { DxoExportModule } from './nested/export';\r\nimport { DxoGeometryModule } from './nested/geometry';\r\nimport { DxoLoadingIndicatorModule } from './nested/loading-indicator';\r\nimport { DxoFontModule } from './nested/font';\r\nimport { DxoMarginModule } from './nested/margin';\r\nimport { DxoRangeContainerModule } from './nested/range-container';\r\nimport { DxiRangeModule } from './nested/range-dxi';\r\nimport { DxoScaleModule } from './nested/scale';\r\nimport { DxoLabelModule } from './nested/label';\r\nimport { DxoFormatModule } from './nested/format';\r\nimport { DxoOverlappingBehaviorModule } from './nested/overlapping-behavior';\r\nimport { DxoMajorTickModule } from './nested/major-tick';\r\nimport { DxoMinorTickModule } from './nested/minor-tick';\r\nimport { DxoTickModule } from './nested/tick';\r\nimport { DxoSizeModule } from './nested/size';\r\nimport { DxoSubtitleModule } from './nested/subtitle';\r\nimport { DxoSubvalueIndicatorModule } from './nested/subvalue-indicator';\r\nimport { DxoTextModule } from './nested/text';\r\nimport { DxoTitleModule } from './nested/title';\r\nimport { DxoTooltipModule } from './nested/tooltip';\r\nimport { DxoBorderModule } from './nested/border';\r\nimport { DxoShadowModule } from './nested/shadow';\r\nimport { DxoValueIndicatorModule } from './nested/value-indicator';\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The CircularGauge is a widget that indicates values on a circular numeric scale.\r\n */\r\n@Component({\r\n    selector: 'dx-circular-gauge',\r\n    template: '',\r\n    styles: [ ' :host {  display: block; }'],\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxCircularGaugeComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxCircularGauge;\r\n\r\n\r\n    /**\r\n     * Specifies animation options.\r\n     */\r\n    @Input()\r\n    get animation(): { duration?: number, easing?: string, enabled?: boolean } {\r\n        return this._getOption('animation');\r\n    }\r\n    set animation(value: { duration?: number, easing?: string, enabled?: boolean }) {\r\n        this._setOption('animation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the color of the parent page element.\r\n     */\r\n    @Input()\r\n    get containerBackgroundColor(): string {\r\n        return this._getOption('containerBackgroundColor');\r\n    }\r\n    set containerBackgroundColor(value: string) {\r\n        this._setOption('containerBackgroundColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the exporting and printing features.\r\n     */\r\n    @Input()\r\n    get export(): { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the options required to set the geometry of the CircularGauge widget.\r\n     */\r\n    @Input()\r\n    get geometry(): { endAngle?: number, startAngle?: number } {\r\n        return this._getOption('geometry');\r\n    }\r\n    set geometry(value: { endAngle?: number, startAngle?: number }) {\r\n        this._setOption('geometry', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the loading indicator.\r\n     */\r\n    @Input()\r\n    get loadingIndicator(): { backgroundColor?: string, font?: DevExpress.viz.Font, show?: boolean, text?: string } {\r\n        return this._getOption('loadingIndicator');\r\n    }\r\n    set loadingIndicator(value: { backgroundColor?: string, font?: DevExpress.viz.Font, show?: boolean, text?: string }) {\r\n        this._setOption('loadingIndicator', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Generates space around the widget.\r\n     */\r\n    @Input()\r\n    get margin(): { bottom?: number, left?: number, right?: number, top?: number } {\r\n        return this._getOption('margin');\r\n    }\r\n    set margin(value: { bottom?: number, left?: number, right?: number, top?: number }) {\r\n        this._setOption('margin', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n     */\r\n    @Input()\r\n    get pathModified(): boolean {\r\n        return this._getOption('pathModified');\r\n    }\r\n    set pathModified(value: boolean) {\r\n        this._setOption('pathModified', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies gauge range container options.\r\n     */\r\n    @Input()\r\n    get rangeContainer(): { backgroundColor?: string, offset?: number, orientation?: string, palette?: string | Array<string>, paletteExtensionMode?: string, ranges?: Array<any | { color?: string, endValue?: number, startValue?: number }>, width?: number } {\r\n        return this._getOption('rangeContainer');\r\n    }\r\n    set rangeContainer(value: { backgroundColor?: string, offset?: number, orientation?: string, palette?: string | Array<string>, paletteExtensionMode?: string, ranges?: Array<any | { color?: string, endValue?: number, startValue?: number }>, width?: number }) {\r\n        this._setOption('rangeContainer', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to redraw the widget when the size of the parent browser window changes or a mobile device rotates.\r\n     */\r\n    @Input()\r\n    get redrawOnResize(): boolean {\r\n        return this._getOption('redrawOnResize');\r\n    }\r\n    set redrawOnResize(value: boolean) {\r\n        this._setOption('redrawOnResize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a gauge's scale options.\r\n     */\r\n    @Input()\r\n    get scale(): { allowDecimals?: boolean, customMinorTicks?: Array<number>, customTicks?: Array<number>, endValue?: number, hideFirstLabel?: boolean, hideFirstTick?: boolean, hideLastLabel?: boolean, hideLastTick?: boolean, label?: { customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, hideFirstOrLast?: string, indentFromTick?: number, overlappingBehavior?: string | { hideFirstOrLast?: string, useAutoArrangement?: boolean }, precision?: number, useRangeColors?: boolean, visible?: boolean }, majorTick?: { color?: string, customTickValues?: Array<number>, length?: number, showCalculatedTicks?: boolean, tickInterval?: number, useTicksAutoArrangement?: boolean, visible?: boolean, width?: number }, minorTick?: { color?: string, customTickValues?: Array<number>, length?: number, opacity?: number, showCalculatedTicks?: boolean, tickInterval?: number, visible?: boolean, width?: number }, minorTickInterval?: number, orientation?: string, startValue?: number, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, tickInterval?: number } {\r\n        return this._getOption('scale');\r\n    }\r\n    set scale(value: { allowDecimals?: boolean, customMinorTicks?: Array<number>, customTicks?: Array<number>, endValue?: number, hideFirstLabel?: boolean, hideFirstTick?: boolean, hideLastLabel?: boolean, hideLastTick?: boolean, label?: { customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, hideFirstOrLast?: string, indentFromTick?: number, overlappingBehavior?: string | { hideFirstOrLast?: string, useAutoArrangement?: boolean }, precision?: number, useRangeColors?: boolean, visible?: boolean }, majorTick?: { color?: string, customTickValues?: Array<number>, length?: number, showCalculatedTicks?: boolean, tickInterval?: number, useTicksAutoArrangement?: boolean, visible?: boolean, width?: number }, minorTick?: { color?: string, customTickValues?: Array<number>, length?: number, opacity?: number, showCalculatedTicks?: boolean, tickInterval?: number, visible?: boolean, width?: number }, minorTickInterval?: number, orientation?: string, startValue?: number, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, tickInterval?: number }) {\r\n        this._setOption('scale', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's size in pixels.\r\n     */\r\n    @Input()\r\n    get size(): { height?: number, width?: number } {\r\n        return this._getOption('size');\r\n    }\r\n    set size(value: { height?: number, width?: number }) {\r\n        this._setOption('size', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Use the title.subtitle option instead.\r\n     */\r\n    @Input()\r\n    get subtitle(): string | { font?: DevExpress.viz.Font, text?: string } {\r\n        return this._getOption('subtitle');\r\n    }\r\n    set subtitle(value: string | { font?: DevExpress.viz.Font, text?: string }) {\r\n        this._setOption('subtitle', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the appearance options of subvalue indicators.\r\n     */\r\n    @Input()\r\n    get subvalueIndicator(): any {\r\n        return this._getOption('subvalueIndicator');\r\n    }\r\n    set subvalueIndicator(value: any) {\r\n        this._setOption('subvalueIndicator', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a set of subvalues to be designated by the subvalue indicators.\r\n     */\r\n    @Input()\r\n    get subvalues(): Array<number> {\r\n        return this._getOption('subvalues');\r\n    }\r\n    set subvalues(value: Array<number>) {\r\n        this._setOption('subvalues', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the name of the theme the widget uses.\r\n     */\r\n    @Input()\r\n    get theme(): string {\r\n        return this._getOption('theme');\r\n    }\r\n    set theme(value: string) {\r\n        this._setOption('theme', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the widget's title.\r\n     */\r\n    @Input()\r\n    get title(): string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, position?: string, subtitle?: string | { font?: DevExpress.viz.Font, text?: string }, text?: string, verticalAlignment?: string } {\r\n        return this._getOption('title');\r\n    }\r\n    set title(value: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, position?: string, subtitle?: string | { font?: DevExpress.viz.Font, text?: string }, text?: string, verticalAlignment?: string }) {\r\n        this._setOption('title', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures tooltips.\r\n     */\r\n    @Input()\r\n    get tooltip(): { arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, precision?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number } {\r\n        return this._getOption('tooltip');\r\n    }\r\n    set tooltip(value: { arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, precision?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number }) {\r\n        this._setOption('tooltip', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the main value on a gauge.\r\n     */\r\n    @Input()\r\n    get value(): number {\r\n        return this._getOption('value');\r\n    }\r\n    set value(value: number) {\r\n        this._setOption('value', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the appearance options of the value indicator.\r\n     */\r\n    @Input()\r\n    get valueIndicator(): any {\r\n        return this._getOption('valueIndicator');\r\n    }\r\n    set valueIndicator(value: any) {\r\n        this._setOption('valueIndicator', value);\r\n    }\r\n\r\n    /**\r\n     * A handler for the disposing event. Executed when the widget is removed from the DOM using the remove(), empty(), or html() jQuery methods only.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget's rendering has finished.\r\n     */\r\n    @Output() onDrawn: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the exported event. Executed after data from the widget is exported.\r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the exporting event. Executed before data from the widget is exported.\r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the fileSaving event. Executed before a file with exported data is saved on the user's local storage.\r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the incidentOccurred event. Executed when an error or warning appears in the widget.\r\n     */\r\n    @Output() onIncidentOccurred: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the initialized event. Executed only once, after the widget is initialized.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the optionChanged event. Executed after an option of the widget is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the tooltipHidden event.\r\n     */\r\n    @Output() onTooltipHidden: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the tooltipShown event.\r\n     */\r\n    @Output() onTooltipShown: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the animationChange event.\r\n     */\r\n    @Output() animationChange: EventEmitter<{ duration?: number, easing?: string, enabled?: boolean }>;\r\n\r\n    /**\r\n     * A handler for the containerBackgroundColorChange event.\r\n     */\r\n    @Output() containerBackgroundColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * A handler for the elementAttrChange event.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the exportChange event.\r\n     */\r\n    @Output() exportChange: EventEmitter<{ backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string }>;\r\n\r\n    /**\r\n     * A handler for the geometryChange event.\r\n     */\r\n    @Output() geometryChange: EventEmitter<{ endAngle?: number, startAngle?: number }>;\r\n\r\n    /**\r\n     * A handler for the loadingIndicatorChange event.\r\n     */\r\n    @Output() loadingIndicatorChange: EventEmitter<{ backgroundColor?: string, font?: DevExpress.viz.Font, show?: boolean, text?: string }>;\r\n\r\n    /**\r\n     * A handler for the marginChange event.\r\n     */\r\n    @Output() marginChange: EventEmitter<{ bottom?: number, left?: number, right?: number, top?: number }>;\r\n\r\n    /**\r\n     * A handler for the pathModifiedChange event.\r\n     */\r\n    @Output() pathModifiedChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the rangeContainerChange event.\r\n     */\r\n    @Output() rangeContainerChange: EventEmitter<{ backgroundColor?: string, offset?: number, orientation?: string, palette?: string | Array<string>, paletteExtensionMode?: string, ranges?: Array<any | { color?: string, endValue?: number, startValue?: number }>, width?: number }>;\r\n\r\n    /**\r\n     * A handler for the redrawOnResizeChange event.\r\n     */\r\n    @Output() redrawOnResizeChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the rtlEnabledChange event.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the scaleChange event.\r\n     */\r\n    @Output() scaleChange: EventEmitter<{ allowDecimals?: boolean, customMinorTicks?: Array<number>, customTicks?: Array<number>, endValue?: number, hideFirstLabel?: boolean, hideFirstTick?: boolean, hideLastLabel?: boolean, hideLastTick?: boolean, label?: { customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, hideFirstOrLast?: string, indentFromTick?: number, overlappingBehavior?: string | { hideFirstOrLast?: string, useAutoArrangement?: boolean }, precision?: number, useRangeColors?: boolean, visible?: boolean }, majorTick?: { color?: string, customTickValues?: Array<number>, length?: number, showCalculatedTicks?: boolean, tickInterval?: number, useTicksAutoArrangement?: boolean, visible?: boolean, width?: number }, minorTick?: { color?: string, customTickValues?: Array<number>, length?: number, opacity?: number, showCalculatedTicks?: boolean, tickInterval?: number, visible?: boolean, width?: number }, minorTickInterval?: number, orientation?: string, startValue?: number, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, tickInterval?: number }>;\r\n\r\n    /**\r\n     * A handler for the sizeChange event.\r\n     */\r\n    @Output() sizeChange: EventEmitter<{ height?: number, width?: number }>;\r\n\r\n    /**\r\n     * A handler for the subtitleChange event.\r\n     */\r\n    @Output() subtitleChange: EventEmitter<string | { font?: DevExpress.viz.Font, text?: string }>;\r\n\r\n    /**\r\n     * A handler for the subvalueIndicatorChange event.\r\n     */\r\n    @Output() subvalueIndicatorChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the subvaluesChange event.\r\n     */\r\n    @Output() subvaluesChange: EventEmitter<Array<number>>;\r\n\r\n    /**\r\n     * A handler for the themeChange event.\r\n     */\r\n    @Output() themeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * A handler for the titleChange event.\r\n     */\r\n    @Output() titleChange: EventEmitter<string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, position?: string, subtitle?: string | { font?: DevExpress.viz.Font, text?: string }, text?: string, verticalAlignment?: string }>;\r\n\r\n    /**\r\n     * A handler for the tooltipChange event.\r\n     */\r\n    @Output() tooltipChange: EventEmitter<{ arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, precision?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number }>;\r\n\r\n    /**\r\n     * A handler for the valueChange event.\r\n     */\r\n    @Output() valueChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * A handler for the valueIndicatorChange event.\r\n     */\r\n    @Output() valueIndicatorChange: EventEmitter<any>;\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper, optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'drawn', emit: 'onDrawn' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'tooltipHidden', emit: 'onTooltipHidden' },\r\n            { subscribe: 'tooltipShown', emit: 'onTooltipShown' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'containerBackgroundColorChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'geometryChange' },\r\n            { emit: 'loadingIndicatorChange' },\r\n            { emit: 'marginChange' },\r\n            { emit: 'pathModifiedChange' },\r\n            { emit: 'rangeContainerChange' },\r\n            { emit: 'redrawOnResizeChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scaleChange' },\r\n            { emit: 'sizeChange' },\r\n            { emit: 'subtitleChange' },\r\n            { emit: 'subvalueIndicatorChange' },\r\n            { emit: 'subvaluesChange' },\r\n            { emit: 'themeChange' },\r\n            { emit: 'titleChange' },\r\n            { emit: 'tooltipChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'valueIndicatorChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n        return new DxCircularGauge(element, options);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('subvalues', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('subvalues');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoAnimationModule,\r\n    DxoExportModule,\r\n    DxoGeometryModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxoFontModule,\r\n    DxoMarginModule,\r\n    DxoRangeContainerModule,\r\n    DxiRangeModule,\r\n    DxoScaleModule,\r\n    DxoLabelModule,\r\n    DxoFormatModule,\r\n    DxoOverlappingBehaviorModule,\r\n    DxoMajorTickModule,\r\n    DxoMinorTickModule,\r\n    DxoTickModule,\r\n    DxoSizeModule,\r\n    DxoSubtitleModule,\r\n    DxoSubvalueIndicatorModule,\r\n    DxoTextModule,\r\n    DxoTitleModule,\r\n    DxoTooltipModule,\r\n    DxoBorderModule,\r\n    DxoShadowModule,\r\n    DxoValueIndicatorModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxCircularGaugeComponent\r\n  ],\r\n  exports: [\r\n    DxCircularGaugeComponent,\r\n    DxoAnimationModule,\r\n    DxoExportModule,\r\n    DxoGeometryModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxoFontModule,\r\n    DxoMarginModule,\r\n    DxoRangeContainerModule,\r\n    DxiRangeModule,\r\n    DxoScaleModule,\r\n    DxoLabelModule,\r\n    DxoFormatModule,\r\n    DxoOverlappingBehaviorModule,\r\n    DxoMajorTickModule,\r\n    DxoMinorTickModule,\r\n    DxoTickModule,\r\n    DxoSizeModule,\r\n    DxoSubtitleModule,\r\n    DxoSubvalueIndicatorModule,\r\n    DxoTextModule,\r\n    DxoTitleModule,\r\n    DxoTooltipModule,\r\n    DxoBorderModule,\r\n    DxoShadowModule,\r\n    DxoValueIndicatorModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxCircularGaugeModule { }\r\n"]}